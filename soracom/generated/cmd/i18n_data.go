// Code generated by go-bindata.
// sources:
// ../generators/assets/i18n/soracom-api.text.en.json
// ../generators/assets/i18n/soracom-api.text.ja.json
// DO NOT EDIT!

package cmd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _GeneratorsAssetsI18nSoracomApiTextEnJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xdf\x6f\xdb\xb6\x13\x7f\xcf\x5f\x71\x30\x50\xa4\x2d\xac\xa4\x69\xfb\xf4\x7d\xf8\x6e\x5e\x31\x0c\x5e\x7f\x24\x68\xda\x0d\x03\x02\x38\xb4\x44\xc7\x5c\x65\x52\x23\xa5\xb8\xc6\xd0\xff\x7d\x77\x94\x28\x53\xb4\x64\xc9\x4e\x0a\xf4\xcd\xa2\x78\x9f\x3b\xde\x8f\xcf\x1d\xe5\x7f\x4f\x00\x46\xac\xc8\x97\xa3\xff\x01\xfd\xc6\xa7\x4c\x99\xbc\x7e\xc2\x67\x53\xac\x56\x4c\x6f\x70\x69\x74\xc5\xf5\x42\xe9\x95\x01\x92\xe0\x32\x17\x31\xcb\x85\x92\x90\x2b\x60\x71\xcc\x8d\xa1\x5f\xf8\x06\xae\x2f\x3f\x4e\xde\x5c\xbe\x87\xc9\xd5\xf4\x6c\x34\x76\x48\x09\x37\xb1\x16\x19\x89\x1c\x8d\x06\x9f\x14\x64\xa5\x60\x28\x37\xdf\x00\x03\xad\x54\x4e\xe2\xaa\x90\xf9\x18\x4c\xc6\x63\xb1\xd8\xc0\x2d\x5f\x31\x91\xde\x02\x93\x09\xdc\x66\xcc\x98\xb5\xd2\xc9\x6d\x1f\x98\x84\x09\x2e\xbe\xe5\x1b\x0f\x88\x95\x2b\xd3\xa4\x02\xab\x9e\x7b\xb1\xe0\x7a\xf2\x1e\x0a\xc3\xb5\x87\xa5\x70\x3f\xcb\x95\x46\xb0\x31\xdc\xd2\xcb\x0f\x6c\xc5\x77\xad\x9c\x48\x3a\x3a\xa0\x1a\xfb\x8a\x95\x8f\x9f\xd4\x17\x2e\x61\x2d\xd2\x14\xe6\x1c\x84\x8c\xd3\x22\xe1\x09\xfe\xb0\x3e\xd3\xdc\x64\x4a\x1a\x7c\xb1\x00\x53\x58\x77\x2e\x8a\xf4\x0c\xae\x2b\xe5\xb4\xc7\x07\x75\xcf\x25\x2a\x3a\x5e\xf3\x7f\x0a\x6e\x72\x8c\xce\x22\xe7\x7a\xcd\x74\x62\xb6\x91\xcc\x98\x46\x4b\x71\xdd\x78\x99\x82\xeb\x73\x95\x6c\x1a\x2b\xbb\x51\x9f\x34\x7d\x53\xa9\x19\xd5\x12\xdf\xaa\x5f\xdf\x6a\x65\xee\x28\x81\x2e\x93\xb3\xbc\x30\x2f\x5f\xbc\x38\x4c\xe1\xd6\x19\x9e\xce\x71\x08\xfb\xfa\xc5\x45\x0f\xec\x67\xc9\xe6\x29\xb7\xc9\xba\x55\xc0\xf7\x9d\x23\x4e\x45\x70\x82\xfe\xca\xa2\xd0\x08\x63\x0a\xee\xa2\xde\x9a\x04\xcd\x18\x8f\xbc\xd3\x3c\x46\xc9\xdd\xc8\xe3\x6a\x2e\x8a\xfc\xaa\x8b\xa2\x6d\x46\xf7\x21\xb6\x15\x5e\x14\xd1\xc6\xe8\x0b\xdf\x44\x22\xa9\x31\xdd\x5a\x3f\x66\x5b\x01\x46\x91\x2b\x41\xc2\x1c\xd3\x02\xed\x88\xe4\xb6\x0c\x7d\xb3\x07\x15\xa2\x59\xaa\xf5\x4e\x44\x4e\xfc\x9c\xa8\x32\x62\x64\xe3\x3a\x73\xf0\x33\x4c\x73\x9e\xcf\x72\x02\xf3\xe9\x37\xa0\xe3\x66\xda\x4c\x09\x02\xa3\x09\x0e\x05\x2c\x0a\x58\x14\x40\x57\xd8\x60\xba\x43\xee\xcb\x8c\xdf\xb8\xa4\x4d\xdd\x60\x74\x60\xc3\x29\x1d\x73\x97\x24\x0e\xf7\xd4\x00\x05\x1a\x58\x92\xa0\x84\x41\x3f\x11\x65\xa0\x74\xcc\xc5\xbd\x90\x77\x76\x73\x1b\xe8\x18\x62\x86\x5e\x3b\xbf\xbf\x38\xa7\x88\x9d\xb7\xf9\xe2\xfc\x9e\x6b\x0a\x16\x79\x7a\x2d\xf2\xa5\x05\xcb\x1d\x4b\x15\x59\x82\x46\xfb\x96\x38\x8c\xc6\x61\xdb\x29\x64\x0f\x89\xec\x3a\xe8\xf2\xed\xc8\x7b\xef\x31\x86\xc7\x19\xfd\x28\x53\x79\xcf\x52\x91\x00\x6f\x38\xac\x81\xdc\xca\x4a\x21\x77\x3c\x56\x1a\xfc\x30\x89\xa0\x0b\x09\xa7\x46\x69\x16\xab\xb2\x7c\xa1\x8c\x7b\x5d\x7e\x91\xdd\x1e\xd9\xed\xa7\x07\x66\xc2\x2e\x29\x37\x0a\xb1\xd4\xf4\xb0\x4a\xfc\x83\x30\x04\x7a\xad\xeb\x88\xd6\x6f\xa5\x91\x1d\x49\x1a\x36\x98\x6a\x6f\xe0\xe0\x1a\x1b\x29\xa6\x53\x97\x30\xa5\xfb\x04\xff\xc1\xeb\xc0\x9a\x7b\xd6\x8f\xf8\xba\x17\xb1\x64\x61\xfe\x35\x13\x9a\x27\x0f\xae\xa8\x87\x87\xf3\x3b\x06\xb4\x2b\x9d\x4f\xaa\x13\x8e\xe6\xd8\x8b\xb6\x21\x0e\x8e\xea\x1f\xf3\x1a\x9b\x15\x20\x3d\xa0\xdb\x94\xce\x81\xe4\xa8\x4c\x85\x5c\xa8\xee\xb9\xdd\x0a\xf9\x5b\x2d\xc3\x94\x4d\x15\xed\xa3\x26\x2c\x54\x32\xf6\x70\xe9\x58\x0d\x01\x9a\x37\x60\x21\xd2\x6a\x5e\xda\x5a\x1e\x2b\xb9\x10\x77\x85\xe6\x43\xad\xc7\x16\xa2\xb9\x2d\x7c\xed\x28\xc0\x61\xd8\xde\x6f\xf6\x9f\xe3\x10\xf1\x4c\x2b\x6b\x72\x83\x02\x70\x71\x95\x11\x2d\x8c\xa2\x28\xaa\xc7\xa6\x37\xef\xa6\xc8\x91\x79\x91\x01\xae\xe2\x64\xb2\xc4\xf8\xd9\x01\xa1\xd2\xc6\x20\xc1\x34\x8d\x31\x01\x36\xf0\xc4\x50\xe4\x91\x4c\x13\x85\xc9\x21\x71\x94\xe2\x5f\x85\xc9\x61\x83\xc1\xa7\x24\xcb\x52\x16\x73\x38\x7d\x62\xce\xfe\x36\x0a\xa9\x0f\x07\x7c\x91\xe3\xb8\x73\x23\xaf\x52\xce\x70\xc2\x37\x3c\x45\x28\x58\x2f\x45\xbc\x0c\x27\x1f\x1c\xd2\x97\x2a\xb1\xfc\x68\xb8\x15\xba\x38\x83\xa9\xcc\x8a\xdc\x8d\x58\xd3\xc4\x6a\xa9\x9e\xe0\x39\x7c\xe4\x48\xc1\x2b\x24\x78\x0c\xe5\x73\xb8\x91\x2f\x9d\xc0\x65\x95\xb3\x74\x88\x84\x74\xb0\xd4\x3c\xad\x17\x7f\x2d\x99\x1f\xa1\xae\xaa\x04\x7e\x76\x23\x5f\x39\x59\x1a\xbe\xda\xc4\xa6\x98\x27\x9f\x71\xe4\x02\x1a\xb9\x42\xe9\x1b\xe9\x73\x57\x79\x4c\xf2\x74\x75\xe0\xa7\x17\xd1\xab\x67\xf0\x7f\xf0\x37\x29\xac\x92\xb5\x16\x39\xb7\xd3\x6e\x19\x30\xf2\x30\x4b\xd1\xf1\xc9\xa6\x74\x2d\x36\xa6\x4b\xb7\x0f\x7d\xf9\x13\x3c\xfd\xeb\x5c\x3e\x83\xf6\x29\xed\x8e\x37\x6e\xc3\xfb\x86\x78\x5b\x18\x5e\x1d\x54\xea\x9b\x09\xb5\x87\xf1\x87\xc9\x77\xd4\x3c\x4e\xdf\x44\xed\x43\xea\xe6\x1d\xa5\x97\xa2\xbe\x7c\x87\xbf\xd0\xf9\x95\x6c\x77\xa9\x74\x4b\x84\x56\x6c\x63\x3c\xd4\x12\x57\x82\xe3\xba\x85\x6b\x48\x30\xc2\x54\x8a\x5b\x34\x2a\xa7\x1e\x03\x0f\x02\x0a\xec\xe6\xf7\xf8\x7a\xb6\xc4\x04\x4c\xfd\x4b\xed\xf1\xa6\x5b\x40\x70\x80\x47\x1b\x1e\xc2\x04\x66\xdf\x69\x8c\xc3\x63\x98\x5b\x02\x1d\x6d\xa6\x13\x0f\xcc\x73\x5d\x6e\x88\x81\xef\x99\x64\x77\xdb\xc6\xb8\xc7\x96\xdd\x9d\x8d\x82\x25\x06\x9c\xe1\x95\xd0\x0c\x2d\x5b\xff\x6c\xde\x99\xbc\x16\x5d\x91\xa3\xd9\x37\xae\x1d\x82\xd2\x51\xc2\xc8\x7a\x47\x24\x1f\x29\x8b\x99\x8c\x79\x0a\x25\xc0\xb0\x28\xb6\x88\x05\xe6\x64\x6c\xb3\xb2\x55\x81\x52\x4a\x6f\x06\x33\x4b\x25\x07\x95\x5c\x0f\xab\xec\xec\xee\xb0\xa2\xec\x64\x83\xbc\xf3\x26\x6c\xe9\x4e\x47\x85\xd1\x6d\x51\xbf\x64\x23\xd5\xd6\x7c\x8e\x1b\x86\xe6\xd9\x0e\xf8\x9f\x7c\x7e\xc5\x36\x81\x8e\x7d\x39\x36\x14\xa1\x23\xbf\xb0\xa1\x24\x45\x9c\x0f\xef\x11\x4e\xa0\x2f\x84\xf5\xb6\x40\xa1\x56\x29\x7f\x0c\x76\xb2\x38\x47\x93\x53\x25\x1d\xd8\x66\x96\x22\xcb\x70\x20\x9d\x55\x97\xd5\x47\x31\xd4\x81\x42\x0d\x7a\xb4\xd5\x6d\x50\xe1\x11\xf0\x72\x74\xcc\x98\x4f\x72\xa8\x5c\xc4\x3d\xc3\x71\x87\x48\x93\x6d\x85\x3e\x68\x3c\xda\x42\x4e\x84\x6e\xb5\xa4\xd7\x96\x50\xb0\x75\x6c\x9b\x73\xb6\x3a\xd2\xb0\x5f\x50\xf4\x38\xcb\x76\x24\x3b\x0a\xd1\x14\x73\x82\x99\x0f\x64\xfb\xaa\xe1\x79\x52\xbd\xcd\xb1\xb1\x37\xd0\x4e\x9f\x38\x0f\xd1\xeb\x3e\x9c\xee\xd1\xfa\x7d\x3a\xb0\x53\xfc\xb0\x0e\xdc\x8a\xd2\x9a\x33\xee\xe6\x7d\x18\xa1\xb7\xd4\xae\xa7\x72\xc8\x97\x9e\xc3\x70\xda\x4d\xe7\x7a\x25\x8c\x11\xfe\x0d\x60\x40\xd6\xd7\xee\xda\x7e\xcd\x68\x28\xad\x51\xfb\x8a\xe0\x00\xa0\x8e\x9a\xc0\x0b\x99\x29\x01\x87\xd1\x59\xb5\x7f\xc8\xb7\x8a\xe6\xd6\xf0\xc6\xe2\xa9\x19\xd1\xcd\x57\xc9\x99\xfd\x7b\xab\xe1\xc8\x9d\x3f\xb6\xb0\x7f\x60\xc5\xcf\x96\x3c\xcd\x48\xcf\xef\xd7\x97\x1f\xb0\xf2\x35\x11\x36\xc6\xef\x67\xba\xb8\xd9\x2b\x2d\x7d\x1a\xa1\x4f\xd7\xd5\xff\x5c\x40\x40\x6d\x3e\x38\xf9\x76\xf2\x5f\x00\x00\x00\xff\xff\xfa\x5e\x74\xb5\x8c\x1d\x00\x00")

func GeneratorsAssetsI18nSoracomApiTextEnJsonBytes() ([]byte, error) {
	return bindataRead(
		_GeneratorsAssetsI18nSoracomApiTextEnJson,
		"../generators/assets/i18n/soracom-api.text.en.json",
	)
}

func GeneratorsAssetsI18nSoracomApiTextEnJson() (*asset, error) {
	bytes, err := GeneratorsAssetsI18nSoracomApiTextEnJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../generators/assets/i18n/soracom-api.text.en.json", size: 7564, mode: os.FileMode(420), modTime: time.Unix(1459764695, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _GeneratorsAssetsI18nSoracomApiTextJaJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x5a\x5f\x4f\xe3\x56\x16\x7f\xe7\x53\x58\x91\xaa\xce\x48\x04\x86\xb6\x4f\xfb\xb0\x5a\xda\x7d\x61\xbb\x53\xaa\xe5\x61\xb5\x12\x12\x32\xc9\x1d\xf0\x4e\x62\x47\x76\xc2\x28\x5a\x8d\x84\x6d\x58\xfe\x6c\xe8\xf0\x6f\x08\x29\xb4\x01\x06\x42\x4a\x9a\x04\xca\x74\x9b\x01\x76\xf8\x30\x17\x9b\xf0\xd4\xaf\xb0\xe7\x5e\xdb\x89\xff\x24\x60\x27\x30\xda\x55\x5f\x50\x1c\xee\x3d\xe7\x77\xce\x3d\xe7\x77\xce\x3d\xce\x3f\x7a\x18\x26\xc4\xa6\x92\x93\xa1\xdf\x31\xe4\x33\x3c\x25\x04\x29\xd9\x78\x82\x67\x29\x15\x8f\xb3\x62\x1a\xbe\x0a\x0d\x7e\x3d\xc4\x60\x65\x0f\x2b\x55\xac\x9c\x63\xe5\x1d\x96\x2b\xf5\xa3\xa5\x7a\xf1\x02\x2b\xab\xf5\xdd\x0c\x96\x67\xf0\xb4\x6c\x2c\x2a\x63\xf5\x02\xcb\x45\x86\x3e\xa9\xf3\xe4\x09\x76\xa9\xa7\xb0\xf2\x3a\x77\x46\x17\x67\xb1\xfc\x1e\xcb\x39\x3c\xad\x84\x7a\x2d\x65\x51\x24\x45\x44\x2e\x91\xe4\x04\xde\xa7\x42\x4b\x06\x56\x4b\x44\x09\xa8\x22\xeb\x4b\x58\x29\x10\x6d\xf0\x28\x1f\x9a\x5b\x60\x99\xf2\x2f\x6d\xe7\xad\xb6\x0c\x5f\x56\x19\x14\x67\xb9\x18\x43\x30\x26\x58\x49\x7a\x21\x88\x51\x00\x6f\x49\x37\xe0\x1f\x36\xf5\xc9\x95\xe6\x4e\xe2\xaf\x2f\x51\x7a\x28\x4a\x77\x9b\x4f\xb0\x79\x64\xf0\x29\xd8\x5a\xa0\xb6\xfe\x1b\xfe\x7a\xb7\x0a\x09\x24\xb2\x49\x41\x1c\x8a\xf6\x32\x29\x09\x89\x5f\xb1\x71\xd4\xdb\xd0\x0f\xa6\xae\x62\xf5\x88\x5a\x5b\x24\xd6\x12\xf4\x25\x6d\x19\x8c\x91\xb1\x5c\xc0\xf2\x2b\x2c\xef\x60\xf9\x35\xf5\xb3\x62\x49\xcf\xe8\xf3\xcb\xda\x62\x9e\xfa\x33\x6f\x6a\xba\xf3\x14\xe4\x4c\xfd\x72\x9d\x88\x52\x32\xe0\x14\x80\x48\x8c\x9d\x96\xaf\xce\x0f\x6e\x72\x4b\x36\xab\x33\xda\xe5\x6c\xbd\x00\xda\x8f\x5c\xc0\xf4\x9c\x02\xd8\xc0\x24\x2c\xaf\xc1\x7a\xe6\xce\x53\xc7\xea\x26\x56\x55\xac\x4e\xd3\x25\xa5\xab\xf3\xcd\xab\xda\x37\x14\x74\xc1\x6d\xb3\x79\xb6\x6f\xbc\x36\x37\x03\x25\xc1\x8a\xe0\xbb\x24\x12\x25\x5b\xac\xc2\xf7\xe3\x42\x34\xed\xf8\xc6\x1b\x54\xa6\x6d\x4e\xa5\xa1\xc6\x86\x97\xe6\xa7\x97\x0d\x5d\x22\x92\x12\x02\x2f\x21\x97\x2a\x29\xc9\x26\x53\xd2\x27\x4f\x9e\xf8\xd2\x67\x9c\x92\x4d\x4d\xaf\x5b\xd2\x67\x4f\x06\x7c\x49\xd2\xf6\x4f\xf4\xd7\xd9\xdb\x00\x47\x62\x9c\x0b\xea\x07\xcc\xe1\xae\xb2\x78\x94\x0f\x9c\xc7\xe1\x70\x33\x93\xc3\x61\x7b\x2e\xe9\x99\x39\xad\xf2\xad\x19\x63\xce\x40\x1a\xe5\x1d\x99\x0e\x06\xad\x17\x29\x8e\x42\x3b\x25\x24\xcd\xc3\xcf\x51\x3a\xcc\x45\x4d\x55\xd6\x37\x77\xaa\x72\xf3\xc2\x2d\xa6\x58\x04\x01\x5a\x7a\xe1\x91\x70\x44\x98\xa7\x24\xe1\x34\xad\x0b\x9a\xc8\xd1\x84\x2f\x3a\x4f\x59\x99\x69\xc1\x11\x15\x5d\x9d\xd5\x76\x4e\x08\x59\xec\x16\xaf\xf7\xcf\x4c\xbe\x68\x9c\x78\x8f\x3d\xfe\xcc\xe8\x0b\x71\x92\x94\x42\x63\x16\xd6\x31\xc8\x1d\x94\x1c\x4b\x0a\xcf\x11\x6f\x2f\x2a\xae\x22\xe3\x0c\x51\xac\xae\x50\xb3\xaa\x34\x10\x16\xa8\xad\xe7\x94\x3c\xe6\xe9\x31\x55\xba\x09\x46\xb7\x70\xd3\x97\xa6\x7c\xcb\x3d\x79\xea\xcb\x0a\x5d\x06\x2a\x2e\xb1\xb2\x8f\xd5\x1d\xb7\xde\xf5\x3c\x38\xd5\x3c\xf4\x69\x19\x2b\x40\x92\xdf\x62\xf5\x47\xba\xe6\x92\x1e\x34\x48\xd8\xa5\x8a\x4a\x24\x9c\x89\x2d\x3f\xd2\x04\x28\xdd\x10\xb2\xdd\xb4\x63\x6e\xae\x94\x4b\xf5\xe2\x66\xfd\x62\xc1\xf2\x77\x81\x9c\x24\xa0\x72\x6a\xd7\x5e\x6d\x68\xef\xb3\x44\xc2\xb4\xdc\x3f\x35\xd0\x4f\xc2\xb1\xbf\x95\xdf\xfb\xa7\x90\xc8\x3d\x4b\x9b\x14\xbd\xaa\xad\x00\xae\x53\x6d\xee\xcc\x00\xae\x6f\x1c\xd3\x0f\x33\x5e\xc7\xd4\x8b\x65\x2b\xa8\x5b\xf8\xb5\x35\x2b\xde\xc2\x8b\xde\xb3\x18\xfe\x32\x64\xfb\xbf\x8d\x11\x6d\x9c\x78\xb7\x94\x36\x2e\xce\xe8\xe5\x37\x14\x3b\xa4\x83\x82\x95\x45\x6a\xc4\x16\x56\xd6\x6c\xa1\x6b\xa7\x4f\x27\x25\xbb\x29\xf4\x01\x23\xf4\x37\x12\xa3\x92\x20\xb2\x11\x21\x4e\xfb\x25\xc6\x08\xc9\x06\xa5\x85\x69\xb8\x86\x69\xb8\x42\x8c\x02\xdf\x7f\x4f\x59\x1f\xc4\x1f\xfa\x0b\x50\x4f\xa7\xe0\x2d\x8f\x0e\x9a\x32\x00\x7c\x58\x9e\xd2\xf7\xb7\x29\x15\x13\x6f\x78\x8d\xd1\xb7\xde\x5a\xa6\x06\x67\xb1\x20\xaa\xad\xcf\xa5\x16\x8d\x63\xeb\xf0\x08\x06\xf5\x7f\x86\x18\xae\x6a\x4b\x94\x03\x8e\x5c\xad\xaf\x55\xac\x1b\xd5\x8c\x38\xc0\xcd\x0a\x2d\x75\x7e\xe6\x83\x8c\x9c\x15\x74\x7b\x41\x5b\x7c\xa7\x6f\xe7\x6f\x72\xcb\xa4\x9b\x9e\x9f\x6b\x66\x8b\xbb\x8e\xda\x83\xf5\x21\xc9\xa8\x8b\x30\xfc\x3f\x08\xc4\x76\x79\xdf\x63\xba\x34\x34\xce\xc5\x62\xcd\xd0\x74\xf9\xd6\xee\xd7\xfa\xd1\x4f\x37\x73\x2b\x84\x07\x37\xf6\x0c\xce\x35\xfb\x21\x60\xd5\xbd\x33\xe8\xab\xcc\xc0\x81\xd2\xa2\x42\x28\xed\x52\xfe\x05\x66\xac\x11\xa8\xa4\x33\xab\x52\xb4\xdf\x59\xed\xac\xbb\xd7\x6d\x7b\xeb\x7d\x70\xc5\x2e\x8f\x44\x04\xfe\x19\x37\x91\x12\x91\x1f\xaf\xd8\xd9\x59\xab\xe4\x41\xf4\xf5\xea\xb1\xb6\xa7\xfe\x7a\x01\xe7\x9c\xc5\x6a\xd9\x8e\xe9\x57\x52\x20\x2a\x26\x4d\x2b\x33\x66\x1b\xe9\xdf\x13\x0f\xab\x2c\x21\x0a\xcf\xb8\x18\x72\xf2\x3b\x7c\x19\x4f\x10\xce\x0f\x85\xc3\x61\x66\x64\xf8\x2f\x83\x5f\x0c\x3f\x65\xbe\xf8\x33\xe9\x9d\xac\x02\x4c\xca\x24\x7c\xc8\x42\x53\x1e\x1e\xe5\x3f\x92\xa0\x6f\x86\xbc\x7e\x43\x0b\x67\x95\x06\xfc\x11\x24\x3b\x21\x1e\x79\x85\xe6\xfb\xf1\xd5\x7f\xb6\xcd\x32\x0c\x39\x27\x7f\x47\x2f\xcd\x25\x3b\x78\xe6\xe3\x8f\xa4\xbe\xbf\x4b\x02\xff\x31\xe9\xd1\x9a\xcb\x9b\x17\x23\xeb\xca\xa2\x6f\xbc\xd3\x4f\x61\xe3\xea\x8d\x5c\xd3\x17\xbf\x6f\x73\xe7\x18\xe5\x07\xfa\x98\x41\xc7\xa0\xc2\x7c\xa2\x3d\xe0\xec\x81\xb6\xb8\x65\xc4\x16\xf8\x52\xff\xa6\xa8\x1d\x14\xc1\x7f\xa3\xfc\x27\x7d\x4c\x90\x1e\xa1\xe8\xcd\x49\xbb\xec\x51\xfe\xd3\x3e\xc6\x7b\xfd\x31\xaf\x7f\x8d\xa8\x76\xc1\xf1\x02\x18\xfa\x23\xe5\xaa\xa6\x0c\x6d\x79\xc9\xcb\x5e\xd4\x80\x51\xde\x5e\x8b\x24\x14\x43\x11\x7a\x9a\xed\xbc\xc5\x3c\x1a\x08\x7f\xfa\x98\xf9\x3d\x63\xdf\x26\x40\x7b\xf0\x42\xe4\x92\xc8\xa0\x38\x77\xa4\x31\xe4\xc8\xc9\xe8\x23\x47\x67\x44\x25\xad\xbc\xa9\x6d\x17\x2d\xd9\xcd\x50\xbb\xaa\x2d\xea\x5b\x90\x95\x4b\xcd\x93\x94\xc1\xc0\x3c\xf3\xe8\x6f\xfd\xfc\x63\xa6\xf5\x05\x6a\x02\x39\xc6\x6f\xb7\xdd\xe5\xbd\xc8\x1a\x2e\xb5\x6e\x6c\x3e\xbb\x89\x20\x72\xda\xf0\x6a\x44\x48\x91\xb2\xef\x87\x43\xae\x73\xe7\x37\x99\x9f\xf4\x1a\xb4\xb2\x97\x34\x63\x2e\x28\x5b\x9d\xb6\x20\x38\xf7\x10\xc0\xe0\xb8\xe6\x16\x43\x54\x00\x4a\xf9\x10\xba\xdd\x9e\x11\x51\x14\xf1\x49\x8e\xf5\x5b\x77\x6c\xc9\x61\x2f\x02\x6b\x4b\xc0\x0b\x81\xea\x48\x40\x41\x2e\xdc\x68\x0a\x50\x8f\x4d\xb2\x7c\x34\x66\x9f\xb3\xdd\x5a\x1c\x20\x78\x72\xa6\xbf\xd4\x57\x66\x0f\xaf\xfe\x60\xcc\xfc\x3a\xb7\xa4\x5b\xb9\x2e\xc3\x26\x44\x88\x55\x9f\x06\x1d\x5b\x03\xa9\x6c\x97\x16\x04\x14\xe4\x82\x6c\x0d\x86\xfc\x81\xf6\x12\x78\x57\xd0\x3b\x12\xe7\x20\x35\x72\xe9\x1b\x7b\x8e\xd2\x92\x6f\x6a\x6b\x55\x84\x9c\xd3\xf9\x00\x26\xf9\x33\x2a\xb8\xfc\x36\x54\x08\x17\x4a\x9f\x09\xa3\xbd\xfe\xa7\xb6\x46\x6e\xf1\xfa\x69\x51\xdf\x98\xeb\xea\x9c\x3a\x91\xe5\x02\x9e\x60\xd3\x71\x9a\xf3\x9c\x04\xb1\x96\xf6\x15\x6c\xf2\xa2\xbe\x5e\xd5\x17\x48\x2d\xd5\x4e\x0e\xf4\xf2\x5b\xc7\xbd\xff\xee\xe8\xf2\xb9\xbf\x0d\xd2\x38\x4a\x4e\x0a\x51\x7f\xb9\x6c\xd3\x64\x36\x51\x77\xb9\xc8\x17\x6a\x9f\xb2\x3c\x39\xf1\x02\x8d\x83\x15\x7e\x13\xe2\xaf\x68\xfc\x6b\x16\x9a\x37\x68\x1b\x95\x79\x3a\xff\xf1\x20\x68\x0e\x44\xde\x93\x0a\x26\x57\x6f\x39\x06\xaf\x49\xf7\xa4\xa0\x4d\x4a\x40\x5b\x1d\x4d\x45\x92\x01\x92\xe2\xaa\x36\x5d\x2f\x1c\x06\x0b\xa6\xbb\x77\xba\x60\x89\x42\x0c\xf9\x0b\x1e\xb5\xdc\x98\x7c\x75\x41\xa5\x81\xa4\xb8\xb0\x4a\x93\x5c\x22\xc1\xf1\x13\x63\x6c\x34\x2a\x22\x49\xf2\x07\x5c\x9b\x3b\xab\x2f\xfd\xa2\xcd\xce\xdf\x43\x43\xd1\x89\x2c\xb7\x11\x49\xd6\x5f\x10\x5c\xff\x7c\x52\x2f\xde\x07\xe8\xc0\x82\x9c\x85\x8b\x13\xfd\x66\xe8\x20\x27\x42\xf6\x54\x3a\x06\xde\xe2\xc5\x59\x87\x12\x5b\xde\x2b\xc6\x11\x1b\xf7\x6b\xca\xe7\xb0\xf6\x9e\x6d\xe9\x58\x64\x1b\x42\x91\x52\xe3\x44\xfe\xb8\xef\xce\xf4\x67\xac\x6e\x90\xdb\x22\x69\xe0\x7f\xa0\x0d\xe5\x32\xe4\x22\xf3\x68\x64\xe8\xe9\x63\xa6\xcb\x06\xa9\x7b\xd9\x2e\xeb\xc8\x8b\x3f\x5f\x76\x79\x2f\xd7\x5d\x18\xd2\x91\xb0\xee\xfa\xbc\xb6\xc3\x81\x7b\xe9\xf2\xee\x43\x7a\xcb\x64\xb2\xde\x1b\x74\x61\xa6\x7b\x72\x72\xef\x96\x76\xa2\xa0\xb5\xb1\x48\x8c\x73\x92\xc4\xd9\x6f\xf7\x9d\xd9\x4b\x80\xe4\xc9\xec\x4c\xf9\x05\xab\x87\x74\x44\xfe\x10\x56\x77\xa6\xa6\x0d\xd1\x4c\x41\x26\x1a\xea\x7c\x34\x09\xcb\x14\x4a\xcd\xd0\xea\x67\x18\xe3\xed\x10\x7c\x8b\x70\x4f\x19\x6c\xb0\x42\x11\x21\x1e\x17\xf8\x31\xfa\x2b\x19\xc7\xa1\x79\x7e\x1f\x03\x6d\x85\x20\x42\xc7\x8f\x62\x09\x43\xbf\xeb\x87\x05\x15\xe6\x73\xd8\x42\x48\xcc\x7a\x6d\x42\x9c\xc8\xfc\x69\x64\xf8\x2b\x86\x4e\xbf\x08\x96\x3f\x90\x39\x2a\xf9\x9d\x02\x83\x15\xc5\x7a\xe9\x5a\x35\x16\xc1\x55\x44\x2b\x67\xb5\xf9\x2c\x79\x97\xd7\xfc\x99\x44\x7b\xaf\xf7\xbc\xec\xf9\x6f\x00\x00\x00\xff\xff\xfe\xbc\x0b\xf0\x97\x26\x00\x00")

func GeneratorsAssetsI18nSoracomApiTextJaJsonBytes() ([]byte, error) {
	return bindataRead(
		_GeneratorsAssetsI18nSoracomApiTextJaJson,
		"../generators/assets/i18n/soracom-api.text.ja.json",
	)
}

func GeneratorsAssetsI18nSoracomApiTextJaJson() (*asset, error) {
	bytes, err := GeneratorsAssetsI18nSoracomApiTextJaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../generators/assets/i18n/soracom-api.text.ja.json", size: 9879, mode: os.FileMode(420), modTime: time.Unix(1459764695, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../generators/assets/i18n/soracom-api.text.en.json": GeneratorsAssetsI18nSoracomApiTextEnJson,
	"../generators/assets/i18n/soracom-api.text.ja.json": GeneratorsAssetsI18nSoracomApiTextJaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"generators": &bintree{nil, map[string]*bintree{
			"assets": &bintree{nil, map[string]*bintree{
				"i18n": &bintree{nil, map[string]*bintree{
					"soracom-api.text.en.json": &bintree{GeneratorsAssetsI18nSoracomApiTextEnJson, map[string]*bintree{}},
					"soracom-api.text.ja.json": &bintree{GeneratorsAssetsI18nSoracomApiTextJaJson, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

