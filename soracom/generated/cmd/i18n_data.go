// Code generated by go-bindata.
// sources:
// ../generators/assets/i18n/soracom-api.text.en.json
// ../generators/assets/i18n/soracom-api.text.ja.json
// DO NOT EDIT!

package cmd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _GeneratorsAssetsI18nSoracomApiTextEnJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x0c\x0c\x14\x49\x0a\x2b\x69\xda\x9e\xde\xc3\xbb\xeb\x2d\x16\x85\xb7\x1f\x31\x9a\xb6\x8b\x05\x02\x38\xb4\x44\xdb\xdc\xca\xa4\x96\x94\xe2\x1a\x8b\xfc\xf7\x9d\xa1\x44\x99\x92\x25\x4b\x76\x52\xa0\x97\xc0\xa2\x38\xcf\x0c\xe7\xe3\x99\xa1\xf2\xef\x09\xc0\x80\x65\xe9\x72\xf0\x3f\xa0\xdf\xf8\x94\x28\x93\x96\x4f\xf8\x6c\xb2\xd5\x8a\xe9\x0d\x2e\x0d\x26\x5c\xcf\x95\x5e\x19\x20\x09\x2e\x53\x11\xb2\x54\x28\x09\xa9\x02\x16\x86\xdc\x18\xfa\x85\x6f\xe0\xe6\xfa\xd3\xe8\xcd\xf5\x07\x18\x4d\xc6\x17\x83\xa1\x43\x8a\xb8\x09\xb5\x48\x48\xe4\x68\x34\xf8\xac\x20\xc9\x05\xeb\x72\xb3\x0d\x30\xd0\x4a\xa5\x24\xae\x32\x99\x0e\xc1\x24\x3c\x14\xf3\x0d\xdc\xf1\x15\x13\xf1\x1d\x30\x19\xc1\x5d\xc2\x8c\x59\x2b\x1d\xdd\x75\x81\x49\x18\xe1\xe2\x3b\xbe\xf1\x80\x58\xbe\x32\x8e\x0a\xb0\xe2\xb9\x13\x0b\x6e\x46\x1f\x20\x33\x5c\x7b\x58\x0a\xf7\xb3\x54\x69\x04\x1b\xc2\x1d\xbd\xfc\xc8\x56\x7c\xd7\xca\x91\xa4\xa3\x03\xaa\xb1\xaf\x58\xfe\xf8\x59\x7d\xe3\x12\xd6\x22\x8e\x61\xc6\x41\xc8\x30\xce\x22\x1e\xe1\x0f\xeb\x33\xcd\x4d\xa2\xa4\xc1\x17\x73\x30\x99\x75\xe7\x3c\x8b\x2f\xe0\xa6\x50\x4e\x7b\x7c\x50\xf7\x9c\xa3\xa2\xe3\x35\xff\x27\xe3\x26\xc5\xe8\xcc\x53\xae\xd7\x4c\x47\x66\x1b\xc9\x84\x69\xb4\x14\xd7\x8d\x97\x29\xb8\x3e\x53\xd1\xa6\xb2\xb2\x1b\xf5\x51\xd5\x37\x85\x9a\x41\x29\xf1\x50\xfc\x7a\x28\x95\xb9\xa3\xd4\x74\x99\x94\xa5\x99\x79\xf9\xe2\xc5\x61\x0a\xb7\xce\xf0\x74\x0e\xeb\xb0\xaf\x5f\x5c\x75\xc0\x7e\x91\x6c\x16\x73\x9b\xac\x5b\x05\x7c\xdf\x39\xc2\x58\xd4\x4e\xd0\x5d\x59\x14\x1a\x61\x4c\xc6\x5d\xd4\x1b\x93\xa0\x1a\xe3\x81\x77\x9a\xa7\x28\xb9\x5b\x79\x5c\xcd\x05\x81\x5f\x75\x41\xb0\xcd\xe8\x2e\xc4\xa6\xc2\x0b\x02\xda\x18\x7c\xe3\x9b\x40\x44\x25\xa6\x5b\xeb\xc6\x6c\x2a\xc0\x20\x70\x25\x48\x98\x43\x5a\xa0\x1d\x81\xdc\x96\xa1\x6f\x76\xaf\x42\x34\x4b\xb5\xde\x89\xc8\x89\x9f\x13\x45\x46\x0c\x6c\x5c\xa7\x0e\x7e\x8a\x69\xce\xd3\x69\x4a\x60\x3e\xfd\xd6\xe8\xb8\x9a\x36\x63\x82\xc0\x68\x82\x43\x01\x8b\x02\x16\x05\xd0\x15\x36\x98\xee\x90\xfb\x32\xe3\x2d\x97\xb4\xa9\x1d\x8c\x0e\x6c\x38\xa5\x63\xea\x92\xc4\xe1\x9e\x1a\xa0\x40\x03\x8b\x22\x94\x30\xe8\x27\xa2\x0c\x94\x0e\xb9\xb8\x17\x72\x61\x37\x37\x81\x0e\x21\x64\xe8\xb5\xcb\xfb\xab\x4b\x8a\xd8\x65\x93\x2f\x2e\xef\xb9\xa6\x60\x91\xa7\xd7\x22\x5d\x5a\xb0\xd4\xb1\x54\x96\x44\x68\xb4\x6f\x89\xc3\xa8\x1c\xb6\x99\x42\xf6\x90\xc8\xae\x83\xae\xdf\x0d\xbc\xf7\x1e\x63\x78\x9c\xd1\x8d\x32\x96\xf7\x2c\x16\x11\xf0\x8a\xc3\x2a\xc8\x8d\xac\x54\xe7\x8e\xa7\x4a\x83\x9f\x26\x11\x74\x26\xe1\xd4\x28\xcd\x42\x95\x97\x2f\xe4\x71\x2f\xcb\x2f\xb0\xdb\x03\xbb\xfd\xf4\xc0\x4c\xd8\x25\xe5\x4a\x21\xe6\x9a\x1e\x57\x89\x5f\x09\x43\xa0\xd7\xda\x8e\x68\xfd\x96\x1b\xd9\x92\xa4\xf5\x06\x53\xec\xad\x39\xb8\xc4\x46\x8a\x69\xd5\x25\x4c\xee\x3e\xc1\x7f\xf2\x3a\xb0\xe6\x5e\x74\x23\xbe\xee\x44\xcc\x59\x98\x7f\x4f\x84\xe6\xd1\xa3\x2b\xea\xf1\xe1\xfc\x81\x01\x6d\x4b\xe7\x93\xe2\x84\x83\x19\xf6\xa2\x6d\x88\x6b\x47\xf5\x8f\x79\x83\xcd\x0a\x90\x1e\xd0\x6d\x4a\xa7\x40\x72\x54\xa6\x42\xce\x55\xfb\xdc\x6e\x85\xfc\xad\x96\x61\xf2\xa6\x8a\xf6\x51\x13\x16\x2a\x1a\x7a\xb8\x74\xac\x8a\x00\xcd\x1b\x30\x17\x71\x31\x2f\x6d\x2d\xc7\xea\x4f\x62\x5e\x68\xea\x34\xdf\x71\x15\xe4\xf6\x59\x3b\x66\xcc\x2c\xc1\x83\xd9\x51\x20\xe7\x62\x91\x69\xde\xd7\x3d\xd8\xa3\x34\xb7\xcc\xa2\x1d\xc7\x38\x0c\x3b\x5c\x98\xfd\x8e\x3a\x44\x3c\xd1\xca\xfa\xa4\xc2\x31\xb8\xb8\x4a\x88\x77\x06\x41\x10\x94\x73\xd9\x9b\xf7\x63\x24\xe1\x34\x4b\x00\x57\x71\xf4\x59\x62\x82\xd8\x09\xa4\xd0\xc6\x20\xc2\x3a\x08\x31\xc3\x36\xf0\xcc\x50\x6a\x21\x5b\x47\x0a\xb3\x4f\xe2\xac\xc6\xbf\x0b\x93\xc2\x06\xb3\x8b\xb2\x38\x89\x59\xc8\xe1\xf4\x99\xb9\xf8\xdb\x28\xe4\x56\xbc\x41\x88\x14\xe7\xa9\x5b\x39\x89\x39\xc3\x2b\x84\xe1\x31\x42\xc1\x7a\x29\xc2\x65\x7d\xb4\xc2\x5b\xc0\x52\x45\x96\x80\x0d\xb7\x42\x57\x17\x30\x96\x49\x96\xba\x19\x6e\x1c\x59\x2d\xc5\x13\x3c\x87\x4f\x1c\xc3\xb3\xc2\x0e\x82\xb9\xf2\x1c\x6e\xe5\x4b\x27\x70\x5d\x14\x05\x1d\x22\x22\x1d\x2c\x36\x67\xe5\xe2\xef\x79\x6b\x41\xa8\x49\x51\x21\xe7\xb7\xf2\x95\x93\xa5\xe9\xae\x49\x6c\x8c\x89\xf8\x05\x67\x3a\xa0\x99\xae\x2e\x7d\x2b\x7d\x72\xcc\x8f\x49\x9e\x2e\x0e\x7c\x76\x15\xbc\x3a\x87\xff\x83\xbf\x49\x61\x19\xae\xb5\x48\xb9\x1d\xa7\xf3\x80\x91\x87\x59\x8c\x8e\x8f\x36\xb9\x6b\xb1\xf3\x5d\xbb\x7d\xe8\xcb\x5f\xe0\xec\xaf\x4b\x79\x0e\xcd\x63\xe0\x82\x57\xae\xdb\xfb\x6e\x09\xb6\xf2\xbc\x42\x2b\xd4\x57\x13\x6a\x4f\x4b\xe9\x27\xdf\x42\x2a\x38\xde\x53\xef\xe8\x53\x37\xef\x29\xbd\x14\x35\xfe\x05\xfe\x42\xe7\x17\xb2\xed\xa5\xd2\x2e\x51\xb7\x62\x1b\xe3\xbe\x96\xb8\x12\x1c\x96\x33\x82\x86\x08\x23\x4c\xa5\xb8\x45\xa3\x72\xea\x30\xf0\x20\xa0\x9a\xdd\xfc\x1e\x5f\x4f\x97\x98\x80\xb1\x7f\x6b\x3e\xde\x74\x0b\x08\x0e\xf0\x68\xc3\xeb\x30\x35\xb3\x17\x1a\xe3\xf0\x14\xe6\xe6\x40\x47\x9b\xe9\xc4\x6b\xe6\xb9\x36\xda\xc7\xc0\x0f\x4c\xb2\xc5\xb6\xf3\xee\xb1\x65\x77\x67\xa5\x60\x89\x01\xa7\x78\xe7\x34\x7d\xcb\xd6\x3f\x9b\x77\x26\x6f\x06\x28\xc8\xd1\xec\x9b\x07\x0f\x41\x69\x29\x61\x64\xbd\x23\x92\x8f\x94\x85\x4c\x86\x3c\x86\x1c\xa0\x5f\x14\x1b\xc4\x6a\xe6\x24\x6c\xb3\xb2\x55\x81\x52\x4a\x6f\x7a\x33\x4b\x21\x07\x85\x5c\x07\xab\xec\xec\x6e\xb1\x22\xef\x64\xbd\xbc\xf3\xa6\xde\xd2\x9d\x8e\x02\xa3\xdd\xa2\x6e\xc9\x4a\xaa\xad\xf9\x0c\x37\xf4\xcd\xb3\x1d\xf0\x3f\xf9\x6c\xc2\x36\x35\x1d\xfb\x72\xac\x2f\x42\x4b\x7e\x61\x43\x89\xb2\x30\xed\xdf\x23\x9c\x40\x57\x08\xcb\x6d\x35\x85\x5a\xc5\xfc\x29\xd8\xc9\xe2\x1c\x4d\x4e\x85\x74\xcd\x36\xb3\x14\x49\x82\x13\xef\xb4\xb8\x0d\x3f\x89\xa1\x0e\x14\x4a\xd0\xa3\xad\x6e\x82\xaa\x1f\x01\x6f\x5f\xc7\xdc\x23\x48\x0e\x95\x8b\xb0\x63\x38\x6e\x11\xa9\xb2\xad\xd0\x07\x8d\x47\x5b\xc8\x91\xd0\x8d\x96\x74\xda\x52\x17\x6c\x1c\xdb\x66\x9c\xad\x8e\x34\xec\x37\x14\x3d\xce\xb2\x1d\xc9\x96\x42\x34\xd9\x8c\x60\x66\x3d\xd9\xbe\x68\x78\x9e\x54\x67\x73\xac\xec\xad\x69\xa7\x6f\xa8\x87\xe8\x75\x5f\x66\xf7\x68\xfd\x31\x1d\xd8\x29\x7e\x5c\x07\x6e\x44\x69\xcc\x19\x77\xb5\x3f\x8c\xd0\x1b\x6a\xd7\x53\xd9\xe7\x53\xd2\x61\x38\xcd\xa6\x73\xbd\x12\xc6\x08\xff\x06\xd0\x23\xeb\x4b\x77\x6d\x3f\x97\x54\x94\x96\xa8\x5d\x45\x70\x00\x50\x4b\x4d\xe0\x85\xcc\xf4\xfc\xae\x60\xab\xae\xd8\xdf\xe7\x63\x48\x75\x6b\x5d\x6f\xb2\x78\x02\xe2\xff\x3a\x79\x7b\x3c\xd5\x93\x30\x9c\x7d\x15\x3a\xcd\x58\x0c\x13\x2d\xee\xe9\xfd\x5b\xfc\xb3\x66\x1b\x73\xbe\x7b\xc9\xf2\xac\xa4\x4f\x32\x2b\x25\xa7\xf6\x5f\x7e\x95\xd8\xef\xfc\xb3\x0f\x5b\x1e\x92\xd4\x74\xc9\xe3\x84\x8c\xfa\xe3\xe6\xfa\x23\x92\x95\xa6\x1e\x83\xb6\xfc\x4a\x77\x4d\x7b\x0b\xa7\xcf\x34\xf4\x39\xbf\xf8\xdf\x1f\x10\x50\x53\xd8\x4e\x1e\x4e\xfe\x0b\x00\x00\xff\xff\x29\x27\x73\xa8\xa0\x1e\x00\x00")

func GeneratorsAssetsI18nSoracomApiTextEnJsonBytes() ([]byte, error) {
	return bindataRead(
		_GeneratorsAssetsI18nSoracomApiTextEnJson,
		"../generators/assets/i18n/soracom-api.text.en.json",
	)
}

func GeneratorsAssetsI18nSoracomApiTextEnJson() (*asset, error) {
	bytes, err := GeneratorsAssetsI18nSoracomApiTextEnJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../generators/assets/i18n/soracom-api.text.en.json", size: 7840, mode: os.FileMode(420), modTime: time.Unix(1459939100, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _GeneratorsAssetsI18nSoracomApiTextJaJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x5a\x5f\x4f\x1b\x57\x16\x7f\xe7\x53\x5c\x59\xaa\x4a\x24\x1c\x92\xb6\x4f\xfb\xb0\x5a\xda\x95\x2a\xb6\x9b\x26\xda\x48\x5d\xad\x84\x84\x06\x7c\x03\xb3\xb1\x67\xac\x99\x31\x91\xb5\x8a\xc4\xcc\x24\x0b\x61\x4d\x43\x48\x02\xb8\xa1\x25\x7f\xc1\xc5\xc5\x84\x92\x6e\x1d\x60\xc3\x87\xb9\xcc\x60\x9e\xf2\x15\xf6\xdc\x3b\x33\x9e\x7f\x36\xbe\x63\x43\xb4\xab\xbe\x20\x8f\xb9\xf7\x9c\xdf\x39\xf7\x9c\xdf\x39\xf7\x8c\xff\xd1\x87\x50\x4a\x28\x68\x93\xa9\xdf\x21\xfa\x19\x9e\xf2\xb2\xaa\x35\x9f\xe0\x59\x2d\xe4\x72\x82\x52\x84\xaf\x52\x43\xd7\x86\x11\x31\x9e\x13\x63\x9b\x18\xfb\xc4\x78\x4b\xf4\x5a\x63\x73\xbe\x51\x39\x20\xc6\x62\xe3\x59\x89\xe8\x77\xc8\xb4\xee\x2c\xda\x22\xe6\x01\xd1\x2b\x88\x3d\x99\xb3\xf4\x09\x76\x99\xbb\xb0\xf2\xb8\xbc\xc7\x16\x2f\x13\xfd\x1d\xd1\xcb\x64\xda\x48\x0d\x78\xca\x32\x58\x1d\x57\xc4\xbc\x26\xca\x12\xa7\x42\x4f\x06\x31\xab\x54\x09\xa8\xa2\xeb\xab\xc4\x58\xa7\xda\xe0\x51\xdf\x70\xb7\xc0\x32\xe3\x5f\xd6\xd3\x37\xd6\x02\x7c\xb9\x8d\x70\x4e\x10\xb3\x88\x62\xcc\x0b\xaa\x7a\x4b\x56\x32\x00\xde\x93\xee\xc0\xdf\xf0\xf5\xe9\x35\x7f\x27\xf5\xd7\x57\xb8\x38\x9c\x61\xbb\xdd\x27\xd8\x7c\x7d\xe8\x0a\xd8\xba\xce\x6c\xfd\x37\xfc\x8d\x6f\x95\xf3\x58\x11\x34\x59\x19\xce\x0c\xa0\x82\x8a\x95\xaf\x85\x1c\x1e\x68\xea\x07\x53\x17\x89\xb9\xc9\xac\xad\x50\x6b\x29\xfa\xaa\xb5\x00\xc6\xe8\x44\x5f\x27\xfa\x7d\xa2\x3f\x25\xfa\x63\xe6\x67\xc3\x93\x5e\xb2\x67\x17\xac\xb9\x35\xe6\xcf\x35\x57\x53\xc7\x53\xd0\x4b\x8d\xc3\x47\x54\x94\x51\x02\xa7\x00\x44\x6a\xec\xb4\x7e\xb4\xff\xea\xa4\x3c\x1f\xb0\xba\x64\x1d\xde\x6d\xac\x83\xf6\xcd\x08\x30\xbb\x6c\x00\x36\x30\x89\xe8\x0f\x61\x3d\xea\x78\xea\xc4\x5c\x21\xa6\x49\xcc\x69\xb6\xa4\x7a\xb4\xbf\x72\x54\xff\x96\x81\x5e\x8f\xda\xec\x9e\xed\x8b\xb8\xcd\x7e\xa0\xe4\x05\x05\x7c\xa7\x61\x45\x0d\xc4\x2a\x7c\x3f\x26\x67\x8a\xa1\x6f\xe2\x41\xe5\xda\x16\x56\x9a\x6a\x6e\xb8\xed\x7e\xba\xdd\xd4\xa5\x60\x35\x2f\x4b\x2a\x8e\xa8\x52\x35\x41\x2b\xa8\x9f\x5c\xba\xc4\xa5\xcf\x39\xa5\x80\x9a\x81\xa8\xa4\xcf\x2e\x5d\xe6\x92\x64\xbd\xdc\xb1\x1f\x2f\x9f\x06\x78\x3c\x2b\x46\xa0\x7e\xc0\x1c\xee\x29\x8b\x47\xa4\xc4\x79\x9c\x4e\xfb\x99\x9c\x4e\x07\x73\xc9\x2e\xcd\x58\xb5\xef\xdc\x18\x0b\x07\xd2\x88\x14\xca\x74\x30\xe8\x51\x85\xe1\x58\x6f\xa7\x84\xa6\x79\xfa\x26\x2e\xa6\xc5\x8c\xab\xca\xfb\xa6\xa3\xaa\x28\x2f\x9c\x62\x8a\x47\x10\xa0\x65\x00\x1e\x29\x47\xa4\x25\x46\x12\x61\xd3\x7a\xa0\x89\x32\x4b\xf8\x4a\xf8\x94\x8d\x3b\x2d\x38\xa2\x66\x9b\x77\xad\xa7\x3b\x94\x2c\x9e\x55\x8e\x5f\xee\xb9\x7c\xd1\x3c\xf1\xbe\x60\xfc\xb9\xd1\x97\x12\x55\xb5\x80\x47\x3d\xac\xa3\x90\x3b\x58\x1b\xd5\xe4\x9b\x58\x0a\x16\x95\x48\x91\x09\x87\x28\x31\x1f\x30\xb3\xb6\x59\x20\xdc\x63\xb6\xee\x33\xf2\x98\x65\xc7\x54\xeb\x25\x18\xa3\xc2\x5d\x5f\xba\xf2\x3d\xf7\xac\x31\x5f\xd6\xd8\x32\x50\x71\x48\x8c\x97\xc4\x7c\x1a\xd5\xfb\x68\x0d\x9c\xea\x1e\xfa\xb4\x4e\x0c\x20\xc9\xef\x88\xf9\x13\x5b\x73\xc8\x0e\x1a\x24\x3c\x63\x8a\xaa\x34\x9c\xa9\x2d\x3f\xb1\x04\xa8\x9e\x50\xb2\x5d\x09\x62\xf6\x57\xea\xd5\x46\x65\xa5\x71\x70\xcf\xf3\xf7\x3a\x3d\x49\x40\x15\xd6\x6e\xdd\x5f\xb2\xde\x2d\x53\x09\xd3\xfa\xe0\xd4\xe5\x41\x1a\x8e\x83\xad\xfc\x3e\x38\x85\x15\xf1\x46\xd1\xa5\xe8\x45\xeb\x01\xe0\xda\xb5\x66\xf6\x1c\xe0\xf6\xd2\x6b\xf6\xe1\x4e\xdc\x31\x8d\xca\x96\x17\xd4\x2d\xfc\xda\x9a\x15\x4f\xe1\xc5\xf8\x59\x5c\xfd\x2a\x15\xf8\x7f\x80\x11\x03\x9c\xd8\x59\x4a\x1b\x17\x97\xec\xad\x17\x0c\x3b\xa4\x83\x41\x8c\x39\x66\xc4\x13\x62\x3c\x0c\x84\x6e\x90\x3e\xc3\x94\x1c\xa5\xd0\x73\x8c\xd0\xdf\x48\x8c\xaa\xb2\x22\x8c\xcb\x39\xd6\x2f\x21\x27\x24\x9b\x94\x96\x66\xe1\x9a\x66\xe1\x0a\x31\x0a\x7c\xff\x03\x63\x7d\x10\xbf\xc1\x17\xa0\xb1\x4e\x21\x5e\x1e\x43\x34\xe5\x00\xf8\xb0\x3c\x65\xbf\x5c\x65\x54\x4c\xbd\x11\x37\xc6\x7e\xf2\xc6\x33\x35\x39\x8b\x25\x51\xed\x7d\xae\xb6\x68\x1c\x5b\x87\x47\x32\xa8\xff\x33\xc4\x70\x54\x9f\x67\x1c\xb0\x19\x69\x7d\xbd\x62\xdd\xac\x66\xd4\x01\x51\x56\x68\xa9\xf3\x33\x0e\x32\x0a\x57\xd0\xd5\x7b\xd6\xdc\x5b\x7b\x75\xed\xa4\xbc\x40\xbb\xe9\xd9\x19\x3f\x5b\xa2\x75\x34\x18\xac\xe7\x49\x46\x3d\x84\xe1\xff\x41\x20\xb6\xcb\xfb\x3e\xd7\xa5\xa9\x31\x31\x9b\xf5\x43\x33\xe2\xdb\xa0\x5f\x1b\x9b\x3f\x9f\xcc\x3c\xa0\x3c\xb8\xf4\xdc\xe1\x5c\xb7\x1f\x02\x56\x7d\xbe\x07\x7d\x95\x1b\x38\x50\x5a\x4c\x08\xa5\x67\x8c\x7f\x81\x19\xeb\x14\x2a\xed\xcc\xb6\x19\xda\xef\xbd\x76\x36\xda\xeb\xb6\xbd\xf5\x9e\xbb\xe2\x88\x47\x80\x95\xf3\x59\xec\x6a\xef\xe8\x96\x31\x41\x9d\x44\xce\xd9\x36\x5e\xac\x5a\xb5\x12\xea\xf7\x05\x5c\x40\x54\x35\x3d\x6c\x38\xbf\x65\x47\x7b\xa0\x04\xb5\x05\x20\xdd\x10\x27\x0a\x0a\xe6\xd1\x1f\x2c\x0f\x56\x6d\x0d\x6c\x3b\x5e\x7c\x6d\x3d\x37\xdf\x1f\xcc\x32\x95\x5b\x41\xa7\xbc\xa7\x15\xaa\xe6\xd6\x09\xe3\x8e\xdb\xc7\xf2\x1f\xc5\xf9\x2a\xcb\x2b\xf2\x0d\x31\x8b\xc3\x05\x06\xbe\xcc\xe5\x69\xd1\x49\xa5\xd3\x69\x74\xfd\xea\x5f\x86\xbe\xb8\x7a\x05\x7d\xf1\x67\xda\xbc\x79\x1d\x00\xad\xd3\xf0\x61\x19\x6e\x05\xe9\x11\xe9\x23\x15\x1a\x77\x20\x96\x17\xac\x72\x6f\xb3\x8c\xdb\x04\xb6\xa1\xcc\xa7\x3f\x60\x84\xf3\xfa\xe8\x3f\xab\xee\x21\x40\xd2\xeb\xdf\xb3\x5b\x7b\x35\x08\x1e\x7d\xfc\x91\x7a\xf1\xef\xaa\x2c\x7d\x4c\x9b\x44\x7f\xb9\x7f\x33\xf3\xee\x4c\xf6\xd2\x5b\x7b\x17\x36\x2e\x9e\xe8\x75\x7b\xee\x87\x36\x97\x9e\x11\xe9\xf2\x45\x34\x14\x9a\x94\xb8\x4f\xac\x09\xbd\xfb\xca\x9a\x7b\xe2\x04\x37\xf8\xd2\xfe\xb6\x62\xbd\xaa\x80\xff\x46\xa4\x4f\x2e\xa2\x24\x4d\x4a\x25\x4e\x0a\x41\xd9\x23\xd2\xa7\x17\x51\xfc\xfe\xe5\xde\x3f\x9b\x69\x15\x81\x13\x07\x30\xfc\x47\x46\x96\xbe\x0c\x6b\x61\x3e\x4e\x9f\xcc\x80\x11\x29\x58\x0c\x55\x9c\xc5\xe3\xec\x34\xdb\x79\x0b\xf5\x5f\x4e\x7f\x7a\x01\xfd\x1e\x05\xb7\xc9\xd0\x9f\xdc\x52\x44\x0d\x3b\x1c\x1b\x8d\x34\x44\x8f\x9c\xce\x5e\xca\x6c\x48\x55\xb5\xb6\x56\xac\xd5\x8a\x27\xdb\x0f\xb5\xa3\xfa\x9c\xfd\x04\x68\x61\xde\x3f\x49\x1d\x0c\x5c\x43\xfd\x7f\x1b\x84\x5c\x6d\x7d\x83\x9b\xc0\xa1\xf9\xdf\x69\xc3\x84\x38\xb2\xa6\x4b\xbd\x2b\x23\x67\x3b\x93\x44\x4e\x1b\x62\x1f\x97\x0b\xb4\xef\xe0\xe1\x90\xe3\xf2\xfe\x49\xe9\x67\xbb\x0e\xbd\xf4\x21\xcb\x98\x03\x46\x97\xbb\x2d\x18\x36\x3a\x85\x70\x48\xd6\xdf\xe2\x88\x4a\x40\x29\x1f\x42\x77\xd4\x33\x0a\xce\x60\x49\x13\x05\xde\xc2\x17\x48\x8e\x60\x15\x7a\x38\x0f\xbc\x90\xa8\x90\x25\x14\x14\xc1\x8d\xa7\x00\xf5\xe8\xa4\x20\x65\xb2\xc1\x41\xdf\xa9\xc5\x01\x82\xa7\xec\xfa\xcb\xbc\xef\x5e\x22\xcc\x1f\x9d\xa1\x63\xf7\x96\xf4\x2a\x37\x62\xd8\x84\x02\xb1\xca\x69\xd0\x6b\x6f\x22\xb6\xdc\xa3\x05\x09\x05\x45\x20\x7b\x93\x29\x3e\xd0\x71\x02\xef\x09\x7a\x57\xe2\x42\xa4\x46\x6f\x9d\xa3\x37\x71\x51\xe5\xa6\xb6\x56\x45\x28\xfc\x7a\x20\x81\x49\x7c\x46\x25\x97\xdf\x86\x0a\xe1\x46\xcb\x99\x30\xd6\xe3\x7f\x5a\x0f\xe9\x18\xc1\xde\xad\xd8\x4b\x33\x3d\x9d\x53\x37\xb2\x22\xc0\xf3\x42\x31\xc7\x72\x5e\x54\x21\xd6\x8a\x5c\xc1\xa6\xcf\xd9\x8f\xb6\xed\x7b\xb4\x96\x5a\x3b\xaf\xec\xad\x37\xa1\xc1\x43\xe7\xe8\xe2\xdc\xdf\x06\x69\x0e\x6b\x93\x72\x86\x2f\x97\x03\x9a\xdc\x26\xaa\x93\x8b\xb8\x50\x73\xca\x8a\xe5\xc4\x2d\x3c\x06\x56\xf0\x26\xc4\x5f\xf1\xd8\x35\x01\x9a\x37\x68\x1b\x8d\x59\x36\x80\x8a\x21\xf0\x27\x32\xef\x68\x05\xd3\xb7\x4f\x39\x86\xb8\x49\x67\xa4\xa0\x4d\x4a\x40\x5b\x9d\x29\x8c\x6b\x09\x92\xe2\xa8\x3e\xdd\x58\xdf\x48\x16\x4c\x9d\x77\x46\x60\x29\x72\x16\xf3\x05\x8f\xb9\xd5\x1c\xbd\xf5\x40\xa5\x89\xa4\x44\xb0\xaa\x93\x62\x3e\x2f\x4a\x13\xa3\x42\x26\xa3\x60\x55\xe5\x03\x6e\xcd\xec\x35\xe6\x7f\xb5\xee\xce\x9e\x41\x43\xd1\x8d\xac\xa8\x11\x9a\xc0\x17\x04\xc7\xbf\xec\x34\x2a\x67\x01\x3a\xb1\xa0\x70\xe1\x12\x15\xde\x0c\x1d\x12\x15\xc8\x9e\x5a\xd7\xc0\x5b\xbc\xb9\xeb\x52\x62\xcb\x7b\xc5\x18\x16\x72\xbc\xa6\x7c\x0e\x6b\xcf\xd8\x96\xae\x45\xb6\x21\x14\xb5\x30\x46\xe5\x8f\x71\x77\xa6\xbf\x10\x73\xc9\x9b\x8e\xfc\xc8\x1a\xca\x05\xc8\x45\xd4\x7f\x7d\xf8\xca\x05\xd4\x63\x83\xd4\xbb\xec\x88\x75\xf4\xcd\x23\x97\x5d\xf1\xcb\x75\x0f\x86\x74\x25\xac\xb7\x3e\xaf\xed\x70\xe0\x4c\xba\xbc\xb3\x90\xde\x32\x99\xbc\x17\x17\x3d\x98\x19\x9d\x9c\x9c\xb9\xa5\xdd\x28\x68\x6d\x2c\x56\x72\xa2\xaa\x8a\xc1\xdb\x7d\x77\xf6\x52\x20\x6b\x74\x76\x66\xfc\x4a\xcc\x0d\x36\xa3\x3f\x0f\xab\xbb\x53\xd3\x86\x68\xa6\x20\x13\x39\x67\xb3\x4e\xda\x13\xa3\xee\x68\xe5\x19\xc6\xc4\x3b\x04\x6e\x11\x51\x9c\xf9\x09\x1e\x8c\xdf\x5c\xfb\xb2\x37\xb6\xa3\x02\xfa\xbf\x11\x15\xad\x20\x64\xd1\x35\x45\x9c\x12\x34\x8c\xbe\x84\x3f\xb7\x84\xa2\xda\x1d\xdb\x05\xd1\xd2\x71\x78\x4e\x96\x46\xd9\x2f\x8c\x42\xf1\x16\xfb\x6d\x11\x74\x44\xb2\x02\x97\x15\x9c\xcd\x3b\xae\x8b\xfc\x28\xa3\x86\x3e\x87\x2d\x14\x91\xf7\xca\x89\x82\x42\x7f\xba\x7e\xf5\x6b\xc4\x06\x77\x14\xcb\x1f\xe8\x08\x98\xfe\xc6\x03\x11\xc3\xf0\x5e\x58\x6f\x3b\x8b\xe0\x16\x65\x6d\x2d\x5b\xb3\xcb\xf4\x3d\xa8\xff\x13\x93\xf6\x01\xd3\x77\xbb\xef\xbf\x01\x00\x00\xff\xff\xf1\x14\xb9\x47\xd3\x27\x00\x00")

func GeneratorsAssetsI18nSoracomApiTextJaJsonBytes() ([]byte, error) {
	return bindataRead(
		_GeneratorsAssetsI18nSoracomApiTextJaJson,
		"../generators/assets/i18n/soracom-api.text.ja.json",
	)
}

func GeneratorsAssetsI18nSoracomApiTextJaJson() (*asset, error) {
	bytes, err := GeneratorsAssetsI18nSoracomApiTextJaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../generators/assets/i18n/soracom-api.text.ja.json", size: 10195, mode: os.FileMode(420), modTime: time.Unix(1459939093, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../generators/assets/i18n/soracom-api.text.en.json": GeneratorsAssetsI18nSoracomApiTextEnJson,
	"../generators/assets/i18n/soracom-api.text.ja.json": GeneratorsAssetsI18nSoracomApiTextJaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"generators": &bintree{nil, map[string]*bintree{
			"assets": &bintree{nil, map[string]*bintree{
				"i18n": &bintree{nil, map[string]*bintree{
					"soracom-api.text.en.json": &bintree{GeneratorsAssetsI18nSoracomApiTextEnJson, map[string]*bintree{}},
					"soracom-api.text.ja.json": &bintree{GeneratorsAssetsI18nSoracomApiTextJaJson, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

